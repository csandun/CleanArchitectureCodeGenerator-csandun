using AutoMapper;
using Camms.Risk.Application.Dto.Common;
using Camms.Risk.Application.Repository;
using MediatR;
using Microsoft.Extensions.Logging;

namespace {namespace}
{
    public class Delete{itemname}CommandHandler : IRequestHandler<Delete{itemname}Command, DeletedResponseDto>
    {
        private readonly IRiskUnitOfWork _unitOfWork;
        private readonly IMapper _mapper;
        private readonly ILogger<Delete{itemname}CommandHandler> _logger;

        public Delete{itemname}CommandHandler(
            IRiskUnitOfWork unitOfWork, 
            IMapper mapper, 
            ILogger<Delete{itemname}CommandHandler> logger
            )
        {
            _unitOfWork = unitOfWork;
            _mapper = mapper;
            _logger = logger;
        }

        public async Task<DeletedResponseDto> Handle(Delete{itemname}Command command, CancellationToken cancellationToken)
        {
           // TODO: Delete logic goes here. 

           // Example - Refer `DeleteRiskTypeGroupingCommandHandler.cs`
           
           return  new DeletedResponseDto(command.Id);
        }
    }
}

